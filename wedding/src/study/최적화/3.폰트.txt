1. 폰트 적용시점과 font-display 속성
FOIT 와 FOUT
- FOIT: flash of invisible text
폰트를 다운로드 하기전에는 텍스트를 노출하지 않음
- FOUT: flash of unstyled text
폰트가 다운로드되기전에는 기본 폰트를 노출함
다운로드후에 폰트를 교체함

Font Display를 이용하면 FOIT 와 FOUT를 적절하게 선택해서 사용할 수 있음
- swap(FOUT): 폰트를 다운받기전에는 기본 폰트를 노출하고 다운로드 완료후 폰트를 교체
- block(FOIT): 3초내에 폰트를 다운받지 못하면 기본 폰트를 노출한다.
- fallback(FOIT): 0.1 초 정도 block 이 발생(0.1초 정도 텍스트가 노출이 안됌). 3초 이내로 다운받지 못한다면, 다운로드 여부와 상관없이 기본 폰트 노출 (캐시)
(쉽게: 3초안에 바운받지 못했다면 기본폰트로 쭉 노출해주고 다운받은 폰트는 캐쉬해뒀다가 다음번에 페이지에 진입했을때 적용)
- optional(FOIT): fallback 과 비슷하다. 폰트가 다운로드 받는 시간이 너무 오래걸리면 브라우저가 연결을 취소 할 수 있다. (캐시)

1) font.scss 에서 폰트 적용
- 네트워크탭에 있는 캐시는 꺼주는게 적용한거를 명확하게 볼 수 있음

결론: 어떤게 좋고 나쁘다는 없고 프로젝트 상황에 맞게 사용해주면 됨

2. 폰트의 용량을 줄이는 방법 (woff2, subset)
1) EOT => TTF/OTF => WOFF => WOFF2 순으로 용량이 작음
- 이렇게 이미 src에 적용을 했음에도 용량이 큼 (우리는 한번 더 압축할 필요가 있음)

2) subset (필요한 글자들만 추려서 폰트를 만드는 방법)
- 영어는 26개의 알파벳으로 이루어져있고 영어 폰트에서는 대소문자를 포함해 총 72자의 글자가 필요함, 
하지만 한글은 자음, 모음의 조합을 구성되어있어 모든 경우를 조합하면 한글의 글자 수는 11,772개가 됨 (영어 폰트보다 한글 폰트가 압도적으로 용량이 크다)
- 일상 생활에서 보기 힘든 글자들도 너무많은데 이게 전부다 폰트 안에 들어있음 그래서 우리는 자주 쓰이는 폰트들만 추려서 폰트를 만들어 용량을 줄여야 함

https://namu.wiki/w/%EC%99%84%EC%84%B1%ED%98%95/%ED%95%9C%EA%B8%80%20%EB%AA%A9%EB%A1%9D/KS%20X%201001
위 링크에 들어가보면 우리가 자주 사용하는 문자들만 있음, 이걸 가지고 폰트파일 안에서 추려 볼 거임

https://transfonter.org/
위 사이트에 들어가서 폰트를 추려서 용량을 줄여볼 수 있음
1) 파일을 추가
2) formats 는 ttf, woff, woff2 3개 반환해볼거임
3) Characters안에 나무위키에서 추려낸 문자들을 넣어줌
+) ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.:,;()*!@?'#<>$%&^+-=~ 이런 문자들은 자주 사용하기 때문에 넣어줌


3. 폰트를 우선적으로 로딩하기 (preload)
FOIT 와 FOUT 때문에 폰트를 우선적으로 로딩하는 것이 중요함 - preload라는 방식 이용해볼거임
https://npmjs.com/package/webpack-font-preload-plugin

craco.config.js 에 추가 수정
